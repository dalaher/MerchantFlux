model modelo.mod;
data modelo.dat;
option omit_zero_rows 1;
option minos_options 'crash_option=0 feasibility_tolerance=0 iteration_limit=10000';
solve;

display cost > modelo.sol;
display X > modelo.sol;
display Y > modelo.sol;
display XV > modelo.sol;

printf "La frecuencia de las rutas de contenedores llenos es: \n" > modelo.sol;
display{(i,j) in arcos, t in Barcos}  X[i,j,t]/capacidad[t]  > modelo.sol;
printf "La frecuencia de las rutas de contenedores vacíos es:\n" > modelo.sol;
display{(i,j) in arcos, t in Barcos}  Y[i,j,t]/capacidad[t]  > modelo.sol;

printf "El costo de navegación para cada ruta es: \n" > modelo.sol;
display{(i,j) in arcos} if (sum{ t in Barcos} (X[i,j,t] + Y[i,j,t])==0) then 0 else ((sum {t in Barcos} (X[i,j,t]/capacidad[t] * (tasa_fija[t,i] + costo_diario[t]*tiempo[i] + fuel_puerto[t,i] + distancia[i,j] * (costo_diario[t]/velocidad[t]+ fuel_km[t])))+ sum {t in Barcos} (Y[i,j,t]/capacidad[t] * (tasa_fija[t,i] + costo_diario[t]*tiempo[i] + fuel_puerto[t,i] + distancia[i,j]*(costo_diario[t]/velocidad[t]+ fuel_km[t])))  + sum {t in Barcos}((tasa_contenedor[i] + tasa_contenedor[j] + tasa_variable[t,i]/ratio_contenedor[i] + tasa_variable[t,j]/ratio_contenedor[j] + costo_diario[t]/ratio_contenedor[i] + costo_diario[t]/ratio_contenedor[j]) * X[i,j,t])+ sum {t in Barcos}((tasa_contenedor[i] + tasa_contenedor[j] + tasa_variable[t,i]/ratio_contenedor[i] + tasa_variable[t,j]/ratio_contenedor[j] + costo_diario[t]/ratio_contenedor[i] + costo_diario[t]/ratio_contenedor[j]) * Y[i,j,t]) ) /(sum{ t in Barcos} (X[i,j,t] + Y[i,j,t])))> modelo.sol;

printf "El costo de Inventario para cada ruta es: \n" > modelo.sol;
display{(i,j) in arcos} if (sum{ t in Barcos} (X[i,j,t] + Y[i,j,t])==0) then 0 else ((temporada*perdidas/2 * sum{ t in Barcos } (if X[i,j,t]=0 then 0 else (1/(X[i,j,t]/capacidad[t]) * XV[i,j,t])) + temporada*perdidas/2 * sum{ t in Barcos } (if Y[i,j,t]=0 then 0 else (1/(Y[i,j,t]/capacidad[t]) * valor_contenedor*Y[i,j,t])) + perdidas *sum{ t in Barcos}((XV[i, j,t]+ valor_contenedor * X[i,j,t]) * (tiempo[i] + tiempo[j] + distancia[i,j]/velocidad[t])) + perdidas *sum{ t in Barcos}(valor_contenedor * Y[i,j,t] * (tiempo[i] + tiempo[j] + distancia[i,j]/velocidad[t])) + perdidas * sum{t in Barcos} (if X[i,j,t]=0 then 0 else((1/X[i,j,t]/capacidad[t])* (XV[i, j,t]+ valor_contenedor * X[i,j,t])*(X[i,j,t]/ratio_contenedor[i] + X[i,j,t]/ratio_contenedor[j]))) + perdidas * sum{t in Barcos} (if Y[i,j,t]=0 then 0 else((1/Y[i,j,t]/capacidad[t])* (valor_contenedor * Y[i,j,t])*(Y[i,j,t]/ratio_contenedor[i] + Y[i,j,t]/ratio_contenedor[j])))) / (sum{ t in Barcos} (X[i,j,t] + Y[i,j,t])))> modelo.sol;

